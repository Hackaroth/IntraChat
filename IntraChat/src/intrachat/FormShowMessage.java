/*
* IntraChat 
* 
* Form Send Message
* 
* This file is part of the IntraChat project
* This form show the incoming message
* 
* Copyright (C) 2012  Stefano BARILETTI <hackaroth@gmail.com>

* This program is free software: you can redistribute it and/or modify it under the 
* terms of the GNU General Public License as published by the Free Software 
* Foundation, either version 3 of the License, or (at your option) any later version.

* This program is distributed in the hope that it will be useful, but WITHOUT ANY 
* WARRANTY; without even the implied warranty of MERCHANTABILITY or 
* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
* for more details.

* You should have received a copy of the GNU General Public License along with
* this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package intrachat;

import com.google.gson.Gson;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

public class FormShowMessage extends javax.swing.JDialog {

    private Message ReceivedMessage;
    
    public FormShowMessage(java.awt.Frame parent, boolean modal, Message message) {
        super(parent, modal);
        initComponents();
        setWindowsPosition();
        
        mmMessage.setEditable(false);
        setAlwaysOnTop(true);
        if (message != null) {
            
            ReceivedMessage = message;
            
            if (ReceivedMessage.getSender() != null) {
                lblName.setText(ReceivedMessage.getSender().getName());
                
                if (!ReceivedMessage.getSender().getIcon().isEmpty()) {
                    String[] _userIcon = ReceivedMessage.getSender().getIcon().split(";");

                    if (_userIcon != null && _userIcon.length == 2) {
                        String path = "resources/images/users/" + _userIcon[0] + "/" + _userIcon[1];
                        java.net.URL imgURL = getClass().getResource(path);

                        if (imgURL != null) {
                            ImageIcon icon = new ImageIcon(imgURL);
                            lblUserIcon.setIcon(icon);
                        }            
                    }
                }            

            }
            else {
                lblName.setText("Anonymus");
                String path = "resources/images/users/anonymous.png";
                java.net.URL imgURL = getClass().getResource(path);

                if (imgURL != null) {
                    ImageIcon icon = new ImageIcon(imgURL);
                    lblUserIcon.setIcon(icon);
                }                 
            }

            if (!ReceivedMessage.getBody().isEmpty()) {
                mmMessage.setText(ReceivedMessage.getBody());
            }
        }
        
        String icon = "resources/images/message.png";
        java.net.URL imgURL = getClass().getResource(icon);
        if (imgURL != null) {
            Image iconImage = Toolkit.getDefaultToolkit().getImage(imgURL);
            this.setIconImage(iconImage);
        }        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnRispondi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mmMessage = new javax.swing.JTextArea();
        lblUserIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Incoming message");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        lblName.setText("jLabel1");

        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/intrachat/resources/images/Check.png"))); // NOI18N
        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnRispondi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/intrachat/resources/images/Reply.png"))); // NOI18N
        btnRispondi.setText("Reply");
        btnRispondi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRispondiActionPerformed(evt);
            }
        });

        mmMessage.setColumns(20);
        mmMessage.setLineWrap(true);
        mmMessage.setRows(5);
        jScrollPane1.setViewportView(mmMessage);

        lblUserIcon.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.blue));
        lblUserIcon.setPreferredSize(new java.awt.Dimension(64, 64));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRispondi, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUserIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblName)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUserIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addGap(29, 29, 29)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRispondi)
                    .addComponent(btnOk))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    private void setWindowsPosition() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;

        // Move the window
        this.setLocation(x, y);        
    }
    
    private void btnRispondiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRispondiActionPerformed
        if (ReceivedMessage.getSender() == null)
            return;
        
        FormSendMessage _sm = new FormSendMessage(null, true);
        
        _sm.setOnMessageReceivedHandler(new OnMessageReceivedHandler() {
        
            @Override
            public void onMessageReceived(String message) {
                try {
                    User myself = UserList.getMySelf();
                    if (myself == null) return;
                    
                    ArrayList<User> _rcpt = new ArrayList<User>();
                    _rcpt.add(ReceivedMessage.getSender());
                    
                    Message msg = new Message(UserList.getMySelf(), _rcpt, message);

                    MessageSender.Send(msg);
                    
                } catch (UnknownHostException ex) {
                    Logger.getLogger(FormShowMessage.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(FormShowMessage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        _sm.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnRispondiActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormShowMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormShowMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormShowMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormShowMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                FormShowMessage dialog = new FormShowMessage(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRispondi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblUserIcon;
    private javax.swing.JTextArea mmMessage;
    // End of variables declaration//GEN-END:variables
}
